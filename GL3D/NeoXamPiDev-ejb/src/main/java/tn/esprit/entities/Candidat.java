package tn.esprit.entities;
// Generated 19 oct. 2018 22:55:32 by Hibernate Tools 5.0.6.Final

import java.util.HashSet;
import java.util.Set;

import javax.jms.JMSSessionMode;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;

import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;

import com.fasterxml.jackson.annotation.JsonIdentityInfo;
import com.fasterxml.jackson.annotation.ObjectIdGenerators;

/**
 * Candidat generated by hbm2java
 */
@Entity
@Table(name = "candidat", catalog = "neo3")
@JsonIdentityInfo(generator = ObjectIdGenerators.PropertyGenerator.class,
property ="cin")
public class Candidat implements java.io.Serializable {

	
	private static final long serialVersionUID = 1L;
	private String cin;
	private Curriculumvitae curriculumvitae;
	private String linkedin;
	private String resume;
	private String nom;
	private String prenom;
	private String email;
	private String numTel;
	private String adresse;
	private String perEmail;
	private String image;
	
	private Set<Skills> skillses = new HashSet<Skills>(0);
	private Set<Suivitest> suivitests = new HashSet<Suivitest>(0);
	private Set<Cursus> cursuses = new HashSet<Cursus>(0);
	private Set<User> users = new HashSet<User>(0);
	private Set<Carriere> carrieres = new HashSet<Carriere>();

	public Candidat() {
	}
	
	/**
	 * Used TO PERSIT
	 * @param cin
	 * @param linkedin
	 * @param resume
	 * @param nom
	 * @param prenom
	 * @param email
	 * @param numTel
	 * @param adresse
	 */
	public Candidat(String cin, String linkedin, String resume, String nom, String prenom, String email, String numTel,
			String adresse) {
		super();
		this.cin = cin;
		this.linkedin = linkedin;
		this.resume = resume;
		this.nom = nom;
		this.prenom = prenom;
		this.email = email;
		this.numTel = numTel;
		this.adresse = adresse;
	}

	public Candidat(String cin) {
		this.cin = cin;
	}
	
	/**
	 * @param cin
	 * @param curriculumvitae
	 * @param linkedin
	 * @param resume
	 * @param nom
	 * @param prenom
	 * @param email
	 * @param numTel
	 * @param adresse
	 * @param perEmail
	 */
	public Candidat(String cin, Curriculumvitae curriculumvitae, String linkedin, String resume, String nom, String prenom,
			String email, String numTel, String adresse, String perEmail) {
		super();
		this.cin = cin;
		this.curriculumvitae = curriculumvitae;
		this.linkedin = linkedin;
		this.resume = resume;
		this.nom = nom;
		this.prenom = prenom;
		this.email = email;
		this.numTel = numTel;
		this.adresse = adresse;
		this.perEmail = perEmail;
	}

	public Candidat(String cin, Curriculumvitae curriculumvitae, String linkedin, String resume, String nom, String prenom,
			String email, String numTel, String adresse, String perEmail, Set<Skills> skillses,
			Set<Suivitest> suivitests, Set<Cursus> cursuses, Set<User> users, Set<Carriere> carrieres) {
		this.cin = cin;
		this.curriculumvitae = curriculumvitae;
		this.linkedin = linkedin;
		this.resume = resume;
		this.nom = nom;
		this.prenom = prenom;
		this.email = email;
		this.numTel = numTel;
		this.adresse = adresse;
		this.perEmail = perEmail;
		this.skillses = skillses;
		this.suivitests = suivitests;
		this.cursuses = cursuses;
		this.users = users;
		this.carrieres = carrieres;
	}

	@Id
	@Column(name = "CIN", unique = true, nullable = false)
	public String getCin() {
		return this.cin;
	}

	public void setCin(String cin) {
		this.cin = cin;
	}

	@OneToOne(fetch = FetchType.LAZY,cascade=CascadeType.PERSIST,mappedBy="candidat")	
	public Curriculumvitae getCurriculumvitae() {
		return this.curriculumvitae;
	}

	public void setCurriculumvitae(Curriculumvitae curriculumvitae) {
		this.curriculumvitae = curriculumvitae;
	}

	@Column(name = "linkedin", length = 254)
	public String getLinkedin() {
		return this.linkedin;
	}

	public void setLinkedin(String linkedin) {
		this.linkedin = linkedin;
	}

	@Column(name = "resume", length = 254)
	public String getResume() {
		return this.resume;
	}

	public void setResume(String resume) {
		this.resume = resume;
	}

	@Column(name = "Nom", length = 254)
	public String getNom() {
		return this.nom;
	}

	public void setNom(String nom) {
		this.nom = nom;
	}

	@Column(name = "Prenom", length = 254)
	public String getPrenom() {
		return this.prenom;
	}

	public void setPrenom(String prenom) {
		this.prenom = prenom;
	}

	@Column(name = "Email", length = 254)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "numTel", length = 254)
	public String getNumTel() {
		return this.numTel;
	}

	public void setNumTel(String numTel) {
		this.numTel = numTel;
	}

	@Column(name = "adresse", length = 254)
	public String getAdresse() {
		return this.adresse;
	}

	public void setAdresse(String adresse) {
		this.adresse = adresse;
	}

	@Column(name = "Per_email", length = 254)
	public String getPerEmail() {
		return this.perEmail;
	}

	public void setPerEmail(String perEmail) {
		this.perEmail = perEmail;
	}

	@Column(name = "image", length = 254)
	public String getImage() {
		return image;
	}

	public void setImage(String image) {
		this.image = image;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "candidat",cascade=CascadeType.ALL)
	public Set<Skills> getSkillses() {
		return this.skillses;
	}

	public void setSkillses(Set<Skills> skillses) {
		this.skillses = skillses;
	}
	//TODO:Warrning JsonIGNORE
	@OneToMany(fetch = FetchType.EAGER, mappedBy = "candidat")
	public Set<Suivitest> getSuivitests() {
		return this.suivitests;
	}

	public void setSuivitests(Set<Suivitest> suivitests) {
		this.suivitests = suivitests;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "candidat",cascade=CascadeType.ALL)
	public Set<Cursus> getCursuses() {
		return this.cursuses;
	}

	public void setCursuses(Set<Cursus> cursuses) {
		this.cursuses = cursuses;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "candidat", cascade = {CascadeType.ALL})
	public Set<User> getUsers() {
		return this.users;
	}

	public void setUsers(Set<User> users) {
		this.users = users;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "candidat",cascade=CascadeType.ALL)
	public Set<Carriere> getCarrieres() {
		return this.carrieres;
	}

	public void setCarrieres(Set<Carriere> carrieres) {
		this.carrieres = carrieres;
	}
	
	@Override
	public String toString() {
		return "Candidat [cin=" + cin + ", curriculumvitae=" + curriculumvitae + ", linkedin=" + linkedin + ", resume="
				+ resume + ", nom=" + nom + ", prenom=" + prenom + ", email=" + email + ", numTel=" + numTel
				+ ", adresse=" + adresse + ", perEmail=" + perEmail + ", skillses=" + skillses + ", suivitests="
				+ suivitests + ", cursuses=" + cursuses + ", users=" + users + ", carrieres=" + carrieres + "]";
	}
	

}
