package tn.esprit.entities;
// Generated 19 oct. 2018 22:55:32 by Hibernate Tools 5.0.6.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import com.fasterxml.jackson.annotation.JsonIdentityInfo;
import com.fasterxml.jackson.annotation.ObjectIdGenerators;



import com.fasterxml.jackson.annotation.JsonIdentityInfo;

import com.fasterxml.jackson.annotation.ObjectIdGenerators;

/**
 * Employe generated by hbm2java
 */
@Entity
@Table(name = "employe", catalog = "neo3")
@JsonIdentityInfo(generator = ObjectIdGenerators.PropertyGenerator.class,
property ="cin")
public class Employe implements java.io.Serializable {



	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private String cin;
	private Departement departement;
	private Equipe equipe;
	private Grade grade;
	private ManagerFrance managerFrance;
	private Employe employeCin1;
	private Employe employeCin2;
	private Contrat contrat;
	private Integer nbJours;
	private Integer rib;
	private String type;
	private Date lastDay;
	private Date joinDate;
	private String nom;
	private String prenom;
	private String email;
	private String numTel;
	private String adresse;
	private String perEmail;
	private String image;
	private int haveC=0;
	private Metier metier;

	private Set<Reclamation> reclamationsForCin = new HashSet<Reclamation>(0);
	
	private Set<SuiviRisk> suiviRisks = new HashSet<SuiviRisk>(0);
	
	private Set<AttestaionDeTravail> attestaionDeTravails = new HashSet<AttestaionDeTravail>(0);
	
	private Set<AttestationDeStage> attestationDeStages = new HashSet<AttestationDeStage>(0);
	
	private Set<Equipe> equipes = new HashSet<Equipe>(0);

	private Set<Suivi> suivis = new HashSet<Suivi>(0);

	private Set<Diplome> diplomes = new HashSet<Diplome>(0);
	
	private Set<Evenement> evenements = new HashSet<Evenement>(0);
	
	private Set<Conge> conges = new HashSet<Conge>(0);
	
	private Set<Note> notes = new HashSet<Note>(0);
	
	private Set<User> users = new HashSet<User>(0);
	
	private Set<Suivitestemployee> suivitestemployees = new HashSet<Suivitestemployee>(0);
	
	private Set<Reclamation> reclamationsForEmpCin = new HashSet<Reclamation>(0);
	
	private Set<Formation> formations = new HashSet<Formation>(0);
	
	private Set<AutorisationConge> autorisationConges = new HashSet<AutorisationConge>(0);

	public Employe() {
	}

	
	public Employe(String cin, String nom, Departement departement) {
		this.cin = cin;
		this.nom = nom;
		this.departement=departement;
	}
	

	public Employe(String cin, Integer nbJours, Integer rib, String type, Date lastDay, Date joinDate, String nom,
			String prenom, String email, String numTel, String adresse, String perEmail) {
		this.cin = cin;
		this.nbJours = nbJours;
		this.rib = rib;
		this.type = type;
		this.lastDay = lastDay;
		this.joinDate = joinDate;
		this.nom = nom;
		this.prenom = prenom;
		this.email = email;
		this.numTel = numTel;
		this.adresse = adresse;
		this.perEmail = perEmail;
	}

	public Employe(String cin, Integer nbJours, Integer rib, String type, String nom,
			String prenom, String email, String numTel, String adresse, String perEmail) {
		this.cin = cin;
		this.nbJours = nbJours;
		this.rib = rib;
		this.type = type;
		this.nom = nom;
		this.prenom = prenom;
		this.email = email;
		this.numTel = numTel;
		this.adresse = adresse;
		this.perEmail = perEmail;

	}
	
	
	public Employe(String cin, Integer nbJours, Integer rib, String type,Date lastDay, Date joinDate, String nom,
			String prenom, String email, String numTel, String adresse, String perEmail,Grade grade) {
		this.cin = cin;
		this.nbJours = nbJours;
		this.rib = rib;
		this.type = type;
		this.lastDay = lastDay;
		this.joinDate = joinDate;
		this.nom = nom;
		this.prenom = prenom;
		this.email = email;
		this.numTel = numTel;
		this.adresse = adresse;
		this.perEmail = perEmail;
		this.grade= grade;
	}

	public Employe(String cin, Integer nbJours, Integer rib, String type, Date lastDay, Date joinDate, String nom,
			String prenom, String email, String numTel, String adresse, String perEmail, Departement departement, Grade grade) {
		this.cin = cin;
		this.nbJours = nbJours;
		this.rib = rib;
		this.type = type;
		this.lastDay = lastDay;
		this.joinDate = joinDate;
		this.nom = nom;
		this.prenom = prenom;
		this.email = email;
		this.numTel = numTel;
		this.adresse = adresse;
		this.perEmail = perEmail;
		this.departement = departement;
		this.grade= grade;

	}



	public Employe(String cin, Departement departement, Equipe equipe, Grade grade, ManagerFrance managerFrance,
			Employe employeCin1, Employe employeCin2, Contrat contrat, Integer nbJours, Integer rib, String type,
			Date lastDay, Date joinDate, String nom, String prenom, String email, String numTel, String adresse,
			String perEmail, String image, int haveC, Set<Reclamation> reclamationsForCin, Set<SuiviRisk> suiviRisks,
			Set<AttestaionDeTravail> attestaionDeTravails, Set<AttestationDeStage> attestationDeStages,
			Set<Equipe> equipes, Set<Suivi> suivis, Set<Diplome> diplomes, Set<Evenement> evenements,
			 Set<Conge> conges, Set<Note> notes, Set<User> users,
			Set<Suivitestemployee> suivitestemployees, Set<Reclamation> reclamationsForEmpCin,
			Set<Formation> formations, Set<AutorisationConge> autorisationConges) {
		super();
		this.cin = cin;
		this.departement = departement;
		this.equipe = equipe;
		this.grade = grade;
		this.managerFrance = managerFrance;
		this.employeCin1 = employeCin1;
		this.employeCin2 = employeCin2;
		this.contrat = contrat;
		this.nbJours = nbJours;
		this.rib = rib;
		this.type = type;
		this.lastDay = lastDay;
		this.joinDate = joinDate;
		this.nom = nom;
		this.prenom = prenom;
		this.email = email;
		this.numTel = numTel;
		this.adresse = adresse;
		this.perEmail = perEmail;
		this.image = image;
		this.haveC = haveC;
		this.reclamationsForCin = reclamationsForCin;
		this.suiviRisks = suiviRisks;
		this.attestaionDeTravails = attestaionDeTravails;
		this.attestationDeStages = attestationDeStages;
		this.equipes = equipes;
		this.suivis = suivis;
		this.diplomes = diplomes;
		this.evenements = evenements;
		
		this.conges = conges;
		this.notes = notes;
		this.users = users;
		this.suivitestemployees = suivitestemployees;
		this.reclamationsForEmpCin = reclamationsForEmpCin;
		this.formations = formations;
		this.autorisationConges = autorisationConges;
	}




	@Id
	@Column(name = "CIN", unique = true, nullable = false)
	public String getCin() {
		return this.cin;
	}

	public void setCin(String cin) {
		this.cin = cin;
	}
	
	@OneToOne
	@JoinColumn(name="IdContraEmploye")
	public Contrat getContrat() {
		return contrat;
	}

	public void setContrat(Contrat contrat) {
		this.contrat = contrat;
	}
	
	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "idDep", nullable = true)
	public Departement getDepartement() {
		return this.departement;
	}

	public void setDepartement(Departement departement) {
		this.departement = departement;
	}
	
	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "idEquipe", nullable = true)
	public Equipe getEquipe() {
		return this.equipe;
	}

	public void setEquipe(Equipe equipe) {
		this.equipe = equipe;
	}
	
	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "idGrade", nullable = true)
	public Grade getGrade() {
		return this.grade;
	}

	public void setGrade(Grade grade) {
		this.grade = grade;
	}
	
	
	
	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "idMetier", nullable = true)
	public Metier getMetier() {
		return metier;
	}

	public void setMetier(Metier metier) {
		this.metier = metier;
	}
	
	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "CIN_Man", nullable = true)
	public ManagerFrance getManagerFrance() {
		return this.managerFrance;
	}

	public void setManagerFrance(ManagerFrance managerFrance) {
		this.managerFrance = managerFrance;
	}
	
	@ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "employeCIN1", nullable = true)
	public Employe getEmployeCin1() {
		return this.employeCin1;
	}

	public void setEmployeCin1(Employe employeCin1) {
		this.employeCin1 = employeCin1;
	}
	
	@ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "employeCIN2", nullable = true)
	public Employe getEmployeCin2() {
		return this.employeCin2;
	}

	public void setEmployeCin2(Employe employeCin2) {
		this.employeCin2 = employeCin2;
	}

	@Column(name = "nbJours", nullable = true)
	public Integer getNbJours() {
		return this.nbJours;
	}

	public void setNbJours(Integer nbJours) {
		this.nbJours = nbJours;
	}

	@Column(name = "rib", nullable = true)
	public Integer getRib() {
		return this.rib;
	}

	public void setRib(Integer rib) {
		this.rib = rib;
	}

	@Column(name = "type", length = 254, nullable = true)
	public String getType() {
		return this.type;
	}

	public void setType(String type) {
		this.type = type;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "lastDay", length = 19, nullable = true)
	public Date getLastDay() {
		return this.lastDay;
	}

	public void setLastDay(Date lastDay) {
		this.lastDay = lastDay;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "joinDate", length = 19, nullable = true)
	public Date getJoinDate() {
		return this.joinDate;
	}

	public void setJoinDate(Date joinDate) {
		this.joinDate = joinDate;
	}

	@Column(name = "Nom", length = 254, nullable = true)
	public String getNom() {
		return this.nom;
	}

	public void setNom(String nom) {
		this.nom = nom;
	}

	@Column(name = "Prenom", length = 254, nullable = true)
	public String getPrenom() {
		return this.prenom;
	}

	public void setPrenom(String prenom) {
		this.prenom = prenom;
	}

	@Column(name = "Email", length = 254, nullable = true)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "numTel", length = 254, nullable = true)
	public String getNumTel() {
		return this.numTel;
	}

	public void setNumTel(String numTel) {
		this.numTel = numTel;
	}

	@Column(name = "adresse", length = 254, nullable = true)
	public String getAdresse() {
		return this.adresse;
	}

	public void setAdresse(String adresse) {
		this.adresse = adresse;
	}

	@Column(name = "Per_email", length = 254, nullable = true)
	public String getPerEmail() {
		return this.perEmail;
	}

	public void setPerEmail(String perEmail) {
		this.perEmail = perEmail;
	}

	
	@Column(name = "image", length = 254, nullable = true)
	public String getImage() {
		return image;
	}

	public void setImage(String image) {
		this.image = image;
	}
	
	
	@OneToMany(fetch = FetchType.EAGER, mappedBy = "employeByCin")
	public Set<Reclamation> getReclamationsForCin() {
		return this.reclamationsForCin;
	}

	public void setReclamationsForCin(Set<Reclamation> reclamationsForCin) {
		this.reclamationsForCin = reclamationsForCin;
	}
	
	
	@OneToMany(fetch = FetchType.EAGER, mappedBy = "employe")
	public Set<SuiviRisk> getSuiviRisks() {
		return this.suiviRisks;
	}

	public void setSuiviRisks(Set<SuiviRisk> suiviRisks) {
		this.suiviRisks = suiviRisks;
	}
	
	
	@OneToMany(fetch = FetchType.EAGER ,mappedBy = "employe",cascade = {CascadeType.REMOVE})
	public Set<AttestaionDeTravail> getAttestaionDeTravails() {
		return this.attestaionDeTravails;
	}

	public void setAttestaionDeTravails(Set<AttestaionDeTravail> attestaionDeTravails) {
		this.attestaionDeTravails = attestaionDeTravails;
	}
	
	
	@OneToMany(fetch = FetchType.EAGER, mappedBy = "employe",cascade = {CascadeType.REMOVE})
	public Set<AttestationDeStage> getAttestationDeStages() {
		return this.attestationDeStages;
	}

	public void setAttestationDeStages(Set<AttestationDeStage> attestationDeStages) {
		this.attestationDeStages = attestationDeStages;
	}
	
	
	@OneToMany(fetch = FetchType.EAGER, mappedBy = "employe")
	public Set<Equipe> getEquipes() {
		return this.equipes;
	}

	public void setEquipes(Set<Equipe> equipes) {
		this.equipes = equipes;
	}
	
	
	@OneToMany(fetch = FetchType.EAGER, mappedBy = "employe")
	public Set<Suivi> getSuivis() {
		return this.suivis;
	}

	public void setSuivis(Set<Suivi> suivis) {
		this.suivis = suivis;
	}
	
	
	@OneToMany(fetch = FetchType.EAGER, mappedBy = "employe")
	public Set<Diplome> getDiplomes() {
		return this.diplomes;
	}

	public void setDiplomes(Set<Diplome> diplomes) {
		this.diplomes = diplomes;
	}
	
	
	@OneToMany(fetch = FetchType.EAGER, mappedBy = "employe",cascade = {CascadeType.REMOVE})
	public Set<Evenement> getEvenements() {
		return this.evenements;
	}

	public void setEvenements(Set<Evenement> evenements) {
		this.evenements = evenements;
	}

	
	
	@OneToMany(fetch = FetchType.EAGER, mappedBy = "employe", cascade = {CascadeType.REMOVE})
	
	public Set<Conge> getConges() {
		return this.conges;
	}

	public void setConges(Set<Conge> conges) {
		this.conges = conges;
	}
	
	
	@OneToMany(fetch = FetchType.EAGER, mappedBy = "employe")
	public Set<Note> getNotes() {
		return this.notes;
	}

	public void setNotes(Set<Note> notes) {
		this.notes = notes;
	}
	
	
	@OneToMany(fetch = FetchType.EAGER, mappedBy = "employe")
	public Set<User> getUsers() {
		return this.users;
	}

	public void setUsers(Set<User> users) {
		this.users = users;
	}
	
	
	@OneToMany(fetch = FetchType.EAGER, mappedBy = "employe")
	public Set<Suivitestemployee> getSuivitestemployees() {
		return this.suivitestemployees;
	}

	public void setSuivitestemployees(Set<Suivitestemployee> suivitestemployees) {
		this.suivitestemployees = suivitestemployees;
	}
	
	
	@OneToMany(fetch = FetchType.EAGER, mappedBy = "employeByEmpCin")
	public Set<Reclamation> getReclamationsForEmpCin() {
		return this.reclamationsForEmpCin;
	}

	public void setReclamationsForEmpCin(Set<Reclamation> reclamationsForEmpCin) {
		this.reclamationsForEmpCin = reclamationsForEmpCin;
	}
	
	
	@OneToMany(fetch = FetchType.EAGER, mappedBy = "employe")
	public Set<Formation> getFormations() {
		return this.formations;
	}

	public void setFormations(Set<Formation> formations) {
		this.formations = formations;
	}
	
	
	@OneToMany(fetch = FetchType.EAGER, mappedBy = "employe" )
	public Set<AutorisationConge> getAutorisationConges() {
		return this.autorisationConges;
	}

	public void setAutorisationConges(Set<AutorisationConge> autorisationConges) {
		this.autorisationConges = autorisationConges;
	}

	public int getHaveC() {
		return haveC;
	}

	public void setHaveC(int haveC) {
		this.haveC = haveC;
	}

	@Override
	public String toString() {
		return "Employe [cin=" + cin + ", departement=" + departement + ", equipe=" + equipe + ", grade=" + grade
				+ ", managerFrance=" + managerFrance + ", employeCin1=" + employeCin1 + ", employeCin2=" + employeCin2
				+ ", nbJours=" + nbJours + ", rib=" + rib + ", type=" + type + ", lastDay=" + lastDay + ", joinDate="
				+ joinDate + ", nom=" + nom + ", prenom=" + prenom + ", email=" + email + ", numTel=" + numTel
				+ "]";
	}



}
