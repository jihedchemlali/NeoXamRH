@model NeoXam.Domain.Entities.formateur

@{
    ViewBag.Title = "Edit Formateur";
    Layout = "~/Views/Shared/_LayoutHome.cshtml";
}

<h4 class="mt-0 header-title">Modifier Formateur</h4>
<p class="text-muted m-b-30 font-14">
    Modifier un Formateur à la liste des Formateurs de notre Entreprise NeoXam .
</p>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.id)

        <div class="form-group row">
            @Html.LabelFor(model => model.nom, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.nom, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.nom, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.prenom, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.prenom, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.prenom, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.address, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.numTel, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.numTel, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.numTel, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.email, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.facebook, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.facebook, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.facebook, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.linkedin, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.linkedin, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.linkedin, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.photo, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.photo, new { htmlAttributes = new { @class = "form-control" } })
                <div class="col-md-10">
                    @Html.TextBox("photo", null, new { type = "file" })
                    @Html.ValidationMessageFor(model => model.photo)
                </div>
                @Html.ValidationMessageFor(model => model.photo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
